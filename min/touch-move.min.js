(()=>{return(e,t)=>{const n=(e,t)=>{const n=Math.pow(Math.abs(e.x-t.x),2);const c=Math.pow(Math.abs(e.y-t.y),2);return n+c>=400};const c=(e,t)=>{const n={screenX:t.screenX,screenY:t.screenY,clientX:t.clientX,clientY:t.clientY};return new MouseEvent(e,{...n,bubbles:true,cancelable:true,view:unsafeWindow,detail:1})};const s=[];const o={passive:false,capture:true};const r=e=>{if(s.some(t=>t.element===e)){return}let t;let r;let u;const a=e=>{if(e.touches.length<1){return}const n=e.touches[0];t={x:n.clientX,y:n.clientY};e.target.dispatchEvent(c("mousedown",n))};e.addEventListener("touchstart",a,o);const l=e=>{if(e.touches.length!==1){return}const s=e.touches[0];const o={x:s.clientX,y:s.clientY};r=s;if(n(t,o)){e.target.dispatchEvent(c("mousemove",s));u=true;if(e.cancelable){e.preventDefault()}}else{u=false}};e.addEventListener("touchmove",l,o);const i=e=>{if(u){e.target.dispatchEvent(c("mouseup",r));if(e.cancelable){e.preventDefault()}u=false}};e.addEventListener("touchend",i,o);s.push({element:e,touchstart:a,touchmove:l,touchend:i})};const u=e=>{const t=s.find(t=>t.element===e);if(t===undefined){return}["touchstart","touchmove","touchend"].forEach(n=>{e.removeEventListener(n,t[n],o)})};return{export:{enableTouchMove:r,disableTouchMove:u}}}})();