(()=>{return(t,e)=>{const n=[".mp4",".m4a"];const r=(t,e)=>{const n=Math.max(2,Math.trunc(Math.log10(e)+1));return t.toString().padStart(n,"0")};const s=(t,e,n)=>{if(t<2){return null}const s=[];for(let a=1;a<=t;a++){let l=` - ${r(a,t)}`;if(n.includes(".m4a")){l=""}const c=escapeFilename(`${e}${l}${n[a-1]}`).replace(/'/g,"'\\''");s.push(`file '${c}'`)}return s.join("\n")};const a=(t,e)=>{const s=t=>t.fragments.length>1;const a=t.filter(s);if(a.length===0){return null}const l=new Map;a.forEach(t=>{l.set(escapeFilename(`ffmpeg-files-${t.title}.txt`),t.fragments.map((s,l)=>{let c=` - ${r(l+1,a.length)}`;if(e===true){c=""}const i=escapeFilename(`${t.title}${c}${e===true?n[l]:e}`).replace(/'/g,"'\\''");return`file '${i}'`}).join("\n"))});return l};const l=(t,e)=>{const s=[];t.forEach(t=>{t.fragments.forEach((a,l)=>{let c="";if(t.fragments.length>1&&e!==true){c=` - ${r(l+1,t.fragments.length)}`}const i=escapeFilename(`${t.title}${c}${e===true?n[l]:e}`).replace(/'/g,"'\\''");s.push(`file '${i}'`)})});return s.join("\n")};return{export:{getFragmentsList:s,getBatchFragmentsList:a,getBatchEpisodesList:l}}}})();