(()=>{return(t,e)=>{class n{constructor(t={}){this.config=t;this.entries=[]}download(t,e){const a=document.createElement("a");const r=URL.createObjectURL(e);if(n.lastPackageUrl){URL.revokeObjectURL(n.lastPackageUrl)}n.lastPackageUrl=r;a.setAttribute("href",r);a.setAttribute("download",t);document.body.appendChild(a);a.click();a.remove()}add(t,e){if(e===null||e===undefined){return}this.entries.push({name:t,data:e})}async blob(){if(this.entries.length===0){return null}if(this.entries.length===1){const t=this.entries[0].data;return typeof t==="string"?new Blob([t]):t}const t=new JSZip;this.entries.forEach(({name:e,data:n})=>{t.file(e,n)});return await t.generateAsync({type:"blob"})}async emit(t){if(this.entries.length===0){return}if(!t||this.entries.length===1){t=this.entries[0].name}const e=await this.blob();if(!e){return}return this.download(t,e)}static async single(t,e,a={}){const r=new n(a);r.add(t,e);return await r.emit()}}n.lastPackageUrl="";return{export:{DownloadVideoPackage:n}}}})();