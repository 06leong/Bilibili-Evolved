(()=>{return(t,e)=>{const{formatTitle:i}=e.import("title");const s=12;const n=[".mp4",".m4a"];class r{constructor(t){this.config=t;this.itemList=[]}formatTitle(e){const s=t.batchFilenameFormat;const n=i(s,true,e);return escapeFilename(n," ")}async getRawItems(t){return JSON.parse(await this.collectData(t))}extension(t,e){const i=[".flv",".mp4"].find(e=>t.includes(e));if(i){return i}else if(t.includes(".m4s")){return n[e]}else{return".flv"}}async collectAria2(i,n){const r=await this.getRawItems(i);if(n){const i=t.aria2RpcOption;const{sendRpc:n}=await e.importAsync("aria2-rpc");for(const t of r){const e=t.fragments.map((e,n)=>{let r="";if(t.fragments.length>1&&!e.url.includes(".m4s")){r=" - "+(n+1)}const a=[];if(i.secretKey!==""){a.push(`token:${i.secretKey}`)}a.push([e.url]);a.push({referer:document.URL.replace(window.location.search,""),"user-agent":UserAgent,out:`${t.title}${r}${this.extension(e.url,n)}`,split:s,dir:i.baseDir+i.dir||undefined,"max-download-limit":i.maxDownloadLimit||undefined});const o=encodeURIComponent(`${t.title}${r}`);return{params:a,id:o}});await n(e,true)}}else{return`\n# Generated by Bilibili Evolved Video Export\n# https://github.com/the1812/Bilibili-Evolved/\n${r.map(t=>{return t.fragments.map((e,i)=>{let n="";if(t.fragments.length>1&&!e.url.includes(".m4s")){n=` - ${i+1}`}return`\n${e.url}\n  referer=${t.referer}\n  user-agent=${UserAgent}\n  out=${t.title}${n}${this.extension(e.url,i)}\n  split=${s}\n`.trim()}).join("\n")}).join("\n")}\n`.trim()}}}class a extends r{static async test(){if(!document.URL.includes("/www.bilibili.com/video/av")){return false}return await SpinQuery.select("#multi_page")!==null}async getItemList(){if(this.itemList.length>0){return this.itemList}const t=`https://api.bilibili.com/x/web-interface/view?aid=${unsafeWindow.aid}`;const e=await Ajax.getJson(t);if(e.code!==0){Toast.error(`获取视频选集列表失败, message=${e.message}`,"批量下载");return[]}const i=e.data.pages;if(i===undefined){Toast.error(`获取视频选集列表失败, 没有找到选集信息.`,"批量下载");return[]}this.itemList=i.map(t=>{return{title:`P${t.page} ${t.part}`,titleParameters:{n:t.page,ep:t.part},cid:t.cid,aid:unsafeWindow.aid}});return this.itemList}async collectData(t){const i=[];for(const s of(await this.getItemList()).filter(this.config.itemFilter)){const n=this.config.api?this.config.api(s.aid,s.cid,t):`https://api.bilibili.com/x/player/playurl?avid=${s.aid}&cid=${s.cid}&qn=${t}&otype=json`;const r=await Ajax.getJsonWithCredentials(n);const a=r.data||r.result||r;if(a.quality!==t){console.warn(`${s.title} 不支持所选画质, 已回退到较低画质. (quality=${a.quality})`)}let o;if(a.durl){o=a.durl.map(t=>{return{length:t.length,size:t.size,url:t.url}})}else{const{getDashInfo:i,dashToFragments:s}=await e.importAsync("video-dash");const r=await i(n,typeof t==="string"?parseInt(t):t);o=s(r)}i.push({fragments:o,title:this.formatTitle(s.titleParameters),totalSize:o.map(t=>t.size).reduce((t,e)=>t+e),cid:s.cid,referer:document.URL.replace(window.location.search,"")})}return JSON.stringify(i)}}class o extends r{static async test(){return document.URL.includes("/www.bilibili.com/bangumi")}async getItemList(){if(this.itemList.length>0){return this.itemList}const t=document.querySelector("meta[property='og:url']");if(t===null){Toast.error("获取番剧数据失败: 无法找到 Season ID","批量下载");return[]}const e=t.getAttribute("content").match(/play\/ss(\d+)/)[1];if(e===undefined){Toast.error("获取番剧数据失败: 无法解析 Season ID","批量下载");return[]}const i=await Ajax.getJson(`https://api.bilibili.com/pgc/web/season/section?season_id=${e}`);if(i.code!==0){Toast.error(`获取番剧数据失败: 无法获取番剧集数列表, message=${i.message}`,"批量下载");return[]}this.itemList=i.result.main_section.episodes.map((t,e)=>{const i=t.long_title?t.title:(e+1).toString();const s=t.long_title?t.long_title:t.title;return{aid:t.aid,cid:t.cid,title:`${i} - ${s}`,titleParameters:{n:i,ep:s}}});return this.itemList}async collectData(t){const i=[];for(const s of(await this.getItemList()).filter(this.config.itemFilter)){const n=this.config.api?this.config.api(s.aid,s.cid,t):`https://api.bilibili.com/pgc/player/web/playurl?avid=${s.aid}&cid=${s.cid}&qn=${t}&otype=json`;const r=await Ajax.getJsonWithCredentials(n);const a=r.data||r.result||r;if(a.quality!==t){console.warn(`${s.title} 不支持所选画质, 已回退到较低画质. (quality=${a.quality})`)}let o;if(a.durl){o=a.durl.map(t=>{return{length:t.length,size:t.size,url:t.url}})}else{const{getDashInfo:i,dashToFragments:s}=await e.importAsync("video-dash");const r=await i(n,typeof t==="string"?parseInt(t):t);o=s(r)}i.push({fragments:o,title:this.formatTitle(s.titleParameters),totalSize:o.map(t=>t.size).reduce((t,e)=>t+e),cid:s.cid,referer:document.URL.replace(window.location.search,"")})}return JSON.stringify(i)}}const c=[o,a];let l;class u{constructor(t){this.config=Object.assign({itemFilter:()=>true},t)}static async test(){for(const t of c){if(await t.test()===true){l=t;return true}}return false}getExtractor(){if(l===null){logError("[批量下载] 未找到合适的解析模块.");throw new Error(`[Batch Download] module not found.`)}const t=new l(this.config);return t}async getItemList(){const t=this.getExtractor();return await t.getItemList()}async getRawItems(t){const e=this.getExtractor();return await e.getRawItems(t.quality)}async collectData(t,e){const i=this.getExtractor();const s=await i.collectData(t.quality);e.dismiss();return s}async collectAria2(t,e,i=false){const s=this.getExtractor();const n=await s.collectAria2(t.quality,i);e.dismiss();return n}}return{export:{BatchExtractor:u}}}})();